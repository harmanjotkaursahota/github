<?xml version="1.0"?>
<doc>
<assembly>
<name>
Car_Inventory
</name>
</assembly>
<members>
<member name="T:Car_Inventory.My.Resources.Resources">
<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member>
<member name="P:Car_Inventory.My.Resources.Resources.ResourceManager">
<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member>
<member name="P:Car_Inventory.My.Resources.Resources.Culture">
<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member>
<member name="T:Car_Inventory.Car">
 <summary>
 Author Name:    Harmanjot Kaur
 Project Name:   Car_Inventory
 Date:           15 March, 2019
 Description     Application to keep a list of cars and some information about the cars.
 </summary>
</member>
<member name="M:Car_Inventory.Car.#ctor">
 <summary>
 Constructor - Default - creates a new car object
 </summary>
</member>
<member name="M:Car_Inventory.Car.#ctor(System.String,System.String,System.String,System.String,System.Boolean)">
 <summary>
 Constructor - Parameterized - creates a new car object
 </summary>
 <param name="make"></param>
 <param name="model"></param>
 <param name="year"></param>
 <param name="price"></param>
 <param name="newStatus"></param>
</member>
<member name="P:Car_Inventory.Car.Count">
 <summary>
 Count ReadOnly Property - Gets the number of cars that have been instantiated/created
 </summary>
 <returns>Integer</returns>
</member>
<member name="P:Car_Inventory.Car.IdentificationNumber">
 <summary>
 IdentificationNumber ReadOnly Property - Gets a specific car identification number
 </summary>
 <returns>Integer</returns>
</member>
<member name="P:Car_Inventory.Car.NewCarStatus">
 <summary>
 NewCarStatus Property - >Gets and Sets the new Car Status
 </summary>
 <returns>Boolean</returns>
</member>
<member name="P:Car_Inventory.Car.Make">
 <summary>
 Make property - Gets and Sets the make of a car
 </summary>
 <returns>String</returns>
</member>
<member name="P:Car_Inventory.Car.Model">
 <summary>
 Model property - Gets and Sets the model of a car
 </summary>
 <returns>String</returns>
</member>
<member name="P:Car_Inventory.Car.Year">
 <summary>
 Year property - Gets and Sets the year of a car
 </summary>
 <returns>Integer</returns>
</member>
<member name="P:Car_Inventory.Car.Price">
 <summary>
 Price property - Gets and Sets the price of a car
 </summary>
 <returns>Double</returns>
</member>
<member name="M:Car_Inventory.Car.GetSalutation">
 <summary>
 GetSalutation is a function that a salutation based on the private properties within the class scope
 </summary>
 <returns>String</returns>
</member>
<member name="T:Car_Inventory.frmCarInventory">
 <summary>
 Author Name:    Harmanjot Kaur (with the help of sample program posted on DC Connect.)
 Project Name:   Car_Inventory
 Date:           15 March, 2019
 Description     Application to keep a list of cars and some information about the cars.
 </summary>
</member>
<member name="M:Car_Inventory.frmCarInventory.btnEnter_Click(System.Object,System.EventArgs)">
 <summary>
 btnEnter_Click - Will validate that the data entered into the controls is appropriate.
                - Once the data is validated a car object will be create using the  
                - parameterized constructor. It will also insert the new car object
                - into the carList collection. It will also check to see if the data in
                - the controls has been selected from the listview by the user. In that case
                - it will need to update the data in the specific car object and the 
                - listview as well.
 </summary>
 <param name="sender">Object</param>
 <param name="e">EventArgs</param>
</member>
<member name="M:Car_Inventory.frmCarInventory.Reset">
 <summary>
 Reset - set the controls back to their default state.
 </summary>
</member>
<member name="M:Car_Inventory.frmCarInventory.IsValidInput">
 <summary>
 IsValidInput - validates the data in each control to ensure that the user has entered apprpriate values
 </summary>
 <returns>Boolean</returns>
</member>
<member name="M:Car_Inventory.frmCarInventory.btnReset_Click(System.Object,System.EventArgs)">
 <summary>
 Event is declared as private because it is only accessible within the form
 The code in the btnReset_Click EventHandler will clear the form and set
 focus back to the input text box. 
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
</member>
<member name="M:Car_Inventory.frmCarInventory.btnExit_Click(System.Object,System.EventArgs)">
 <summary>
 Event is declared as private because it is only accessible within the form
 The code in the btnExit_Click EventHandler will close the application
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
</member>
<member name="M:Car_Inventory.frmCarInventory.lvwCars_ItemCheck(System.Object,System.Windows.Forms.ItemCheckEventArgs)">
 <summary>
 lvwCars_ItemCheck - used to prevent the user from checking the check box in the list view
                        - if it is not in edit mode
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
</member>
<member name="M:Car_Inventory.frmCarInventory.lvwCars_SelectedIndexChanged(System.Object,System.EventArgs)">
 <summary>
 lvwCars_SelectedIndexChanged - when the user selected a row in the list it will populate the fields for editing
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
</member>
</members>
</doc>
